- defaultTab: nodes
  description: "Query CloudWatch logs to identify rejected requests in Nginx Logs.\
    \  \n\nThe Job uses the CloudWatch Logs plugin to send a query using the Logs\
    \ Insights syntax.\n\nClick on **Definition** on the right to see the specific\
    \ query used for this Job.\n\nClick [here](https://docs.rundeck.com/docs/manual/workflow-steps/aws-cloudwatch.html)\
    \ for more details on the CloudWatch Logs plugin.\nFor authenticating AWS plugins,\
    \ follow the **Configure AWS Credentials** Tour."
  executionEnabled: true
  group: AWS/CloudWatch Logs
  id: 3e62bb0f-5fec-4fef-b2b6-7ff57c5ec01d
  loglevel: INFO
  name: Nginx Rejected Requests
  nodeFilterEditable: false
  options:
  - enforced: true
    label: AWS Region
    name: aws-region
    required: true
    value: us-west-1
    values:
    - us-west-1
    - us-east-1
    - us-east-2
    valuesListDelimiter: ','
  - description: The CloudWatch Log Group to query
    label: CloudWatch Log Group
    name: cloudwatch-log-group
    required: true
    value: cloudwatch-log-group-name
  - description: |-
      ID of the PagerDuty incident that should receive the diagnostics queried from this automation.
      This field is _not_ required to invoke this Job.
    label: PagerDuty Incident ID
    name: pd_incident_id
  plugins:
    ExecutionLifecycle: {}
  scheduleEnabled: true
  schedules: []
  sequence:
    commands:
    - configuration:
        '0': '1'
        cloudWatchLogGroup: ${option.cloudwatch-log-group}
        queryString: |-
          fields @message
          | parse @message '* - - [*] "* * *" * * "-" "*"' as remote_addr, timestamp, request_type, location, protocol, response_code, body_bytes_sent, user_agent
          | filter response_code!="200"
          | display request_type, location, response_code, remote_addr
        region: ${option.aws-region}
        timeUnit: Hours
      description: Nginx CloudWatch Logs Query
      nodeStep: false
      plugins:
        LogFilter:
        - config:
            captureMultipleKeysValues: 'false'
            hideOutput: 'false'
            logData: 'true'
            name: cloudwatch_logs
            regex: (.*)
          type: key-value-data-multilines
      type: aws-query-cloudwatch-logs-step
    - configuration:
        api_token: keys/project/automated-diagnostics/pd-api-token
        incident_id: ${option.pd_incident_id}
        note: ${data.cloudwatch_logs}
      description: Send Diagnostics to PagerDuty
      errorhandler:
        configuration:
          text: Please provide PagerDuty API token to send diagnostics to Incident.
        keepgoingOnSuccess: true
        nodeStep: false
        type: progress-badge
      nodeStep: false
      type: pd-note-step
    keepgoing: false
    strategy: node-first
  tags: 'aws,vpc'
  uuid: 3e62bb0f-5fec-4fef-b2b6-7ff57c5ec01d

