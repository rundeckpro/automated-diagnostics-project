- defaultTab: output
  description: |-
    Retrieve recent service disruptions to public-cloud & SaaS providers

    This Job uses the [RSS Feed](https://docs.rundeck.com/docs/manual/workflow-steps/rss-feed-plugin.html) plugin to surface recent service-disruptions to public-cloud and SaaS providers.
  executionEnabled: true
  id: 0e0459b7-6f13-4b48-ab52-d0dd8154812f
  loglevel: INFO
  name: Third Party Service Disruptions
  nodeFilterEditable: false
  notification:
    onfailure:
      plugin:
        configuration:
          incident_id: ${option.pd_incident_id}
          note: 'Automated diagnostics job did not complete.  For full details, click
                here: ${job.url}#output'
        type: pd-note-incident-notification
  options:
  - description: (Optional) Add a PagerDuty Incident ID to add the diagnostic output
      of this Job to an Incident.
    label: PagerDuty Incident ID
    name: pd_incident_id
  plugins:
    ExecutionLifecycle: null
  scheduleEnabled: true
  schedules: []
  sequence:
    commands:
    - configuration:
        rssUrl: https://status.aws.amazon.com/rss/all.rss
        timeRange: '3'
        timeUnit: Hours
      description: Retrieve AWS Events
      nodeStep: false
      plugins:
        LogFilter:
        - config:
            contextVariable: aws-incidents
            doNothing: 'true'
            mute: 'false'
            regex: 'specified time range: 0'
            statusSymbol: ✅
            text: No recent AWS service disruptions
          type: progress-badges
        - config:
            contextVariable: aws-incidents
            doNothing: 'true'
            mute: 'false'
            regex: \[RESOLVED\]
            statusSymbol: ✅
            text: No recent AWS service disruptions
          type: progress-badges
        - config:
            contextVariable: aws-incidents
            doNothing: 'true'
            mute: 'false'
            regex: 'specified time range: [^0]'
            statusSymbol: ❌
            text: Recent AWS service disruptions
          type: progress-badges
      type: rss-feed-retrieve-events
    - configuration:
        rssUrl: https://status.datadoghq.com/history.rss
        timeRange: '3'
        timeUnit: Hours
      description: Retrieve DataDog Events
      nodeStep: false
      plugins:
        LogFilter:
        - config:
            contextVariable: datadog-incidents
            doNothing: 'true'
            mute: 'false'
            regex: 'specified time range: 0'
            statusSymbol: ✅
            text: No recent Datadog service disruptions
          type: progress-badges
        - config:
            contextVariable: datadog-incidents
            doNothing: 'true'
            mute: 'false'
            regex: \[RESOLVED\]
            statusSymbol: ✅
            text: No recent Datadog service disruptions
          type: progress-badges
        - config:
            contextVariable: datadog-incidents
            doNothing: 'true'
            mute: 'false'
            regex: 'specified time range: [^0]'
            statusSymbol: ❌
            text: Recent Datadog service disruptions
          type: progress-badges
      type: rss-feed-retrieve-events
    - configuration:
        rssUrl: https://www.githubstatus.com/history.rss
        timeRange: '3'
        timeUnit: Hours
      description: Retrieve Github Events
      nodeStep: false
      plugins:
        LogFilter:
        - config:
            contextVariable: github-incidents
            doNothing: 'true'
            mute: 'false'
            regex: 'specified time range: 0'
            statusSymbol: ✅
            text: No recent Github service disruptions
          type: progress-badges
        - config:
            contextVariable: github-incidents
            doNothing: 'true'
            mute: 'false'
            regex: \[RESOLVED\]
            statusSymbol: ✅
            text: No recent Github service disruptions
          type: progress-badges
        - config:
            contextVariable: github-incidents
            doNothing: 'true'
            mute: 'false'
            regex: 'specified time range: [^0]'
            statusSymbol: ❌
            text: Recent Github service disruptions
          type: progress-badges
      type: rss-feed-retrieve-events
    - configuration:
        incident_id: ${option.pd_incident_id}
        note: 'AWS: ${data.aws-incidents}\n\nGithub: ${data.github-incidents}\n\nDatadog:
          ${data.datadog-incidents}\n\nClick here for more details: ${job.url}#output'
      description: Send Diagnostics to PagerDuty
      errorhandler:
        configuration:
          fail: 'false'
          halt: 'true'
          status: 'Please provide PagerDuty API token, User Email, and Incident ID
            to send diagnostics to Incident.'
        keepgoingOnSuccess: true
        nodeStep: false
        type: flow-control
      nodeStep: false
      plugins:
        LogFilter:
        - config:
            captureMultipleKeysValues: 'false'
            hideOutput: 'true'
            logData: 'false'
            name: pd-output
            regex: (.*)
          type: key-value-data-multilines
      type: pd-note-step
    keepgoing: false
    strategy: node-first
  uuid: 0e0459b7-6f13-4b48-ab52-d0dd8154812f

