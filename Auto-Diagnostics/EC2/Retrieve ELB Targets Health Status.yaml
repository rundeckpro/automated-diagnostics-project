- defaultTab: nodes
  description: "Using an AWS Load Balancer's name, retrieve the list of unhealthy\
    \ Targets in the Load Balancer's associated Target Groups.\n\nThis Rundeck Job\
    \ uses the AWS CLI to retrieve the list of **unhealthy** instances associated\
    \ with a given Load Balancer. \nThe AWS CLI must be installed and configured on\
    \ the Process Automation server or on the designated Runner."
  executionEnabled: true
  group: Auto-Diagnostics/EC2
  id: 3b499022-6faf-4431-bf98-94678f64ce47
  loglevel: INFO
  name: Retrieve ELB Targets Health Status
  nodeFilterEditable: false
  options:
  - label: Load Balancer Name
    name: load_balancer_name
    value: polling-cluster
  plugins:
    ExecutionLifecycle: {}
  scheduleEnabled: true
  schedules: []
  sequence:
    commands:
    - description: Retrieve Load Balancer ARN
      exec: aws elbv2 describe-load-balancers --names ${option.load_balancer_name}
        --query 'LoadBalancers[0].LoadBalancerArn' --output text
      plugins:
        LogFilter:
        - config:
            invalidKeyPattern: \s|\$|\{|\}|\\
            logData: 'true'
            name: elb_arn
            regex: (.*)
          type: key-value-data
    - exec: aws elbv2 describe-target-groups --load-balancer-arn ${data.elb_arn*}
        --query 'TargetGroups[*].TargetGroupArn' --output text
      plugins:
        LogFilter:
        - config:
            hideOutput: 'true'
            logData: 'true'
            name: target_groups_arns
            regex: (.*)
          type: key-value-data-multilines
    - fileExtension: sh
      interpreterArgsQuoted: false
      plugins:
        LogFilter:
        - config:
            hideOutput: 'true'
            logData: 'true'
            name: unhealthy_instances
            regex: (.*)
          type: key-value-data-multilines
      script: "#Set argument as data variable from previous step\ntarget_groups=(@data.target_groups_arns*@)\n\
        \nquery=\"TargetHealthDescriptions[?TargetHealth.State!=\\`healthy\\`].{Instance_Id:Target.Id,Health_Check_Port:HealthCheckPort,Target_Health_State:TargetHealth.State,Target_Health_Description:TargetHealth.Description}\"\
        \n\n#Loop over Target Groups to retrieve Health Checks from all instances\n\
        for target_group in \"${target_groups[@]}\"; \ndo \n    aws elbv2 describe-target-health\
        \ --target-group-arn $target_group --query $query;\ndone"
      scriptInterpreter: /bin/bash
    keepgoing: false
    strategy: node-first
  tags: 'aws,ec2'
  uuid: 3b499022-6faf-4431-bf98-94678f64ce47

