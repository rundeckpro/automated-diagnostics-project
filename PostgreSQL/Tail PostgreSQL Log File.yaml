- defaultTab: nodes
  description: |-
    Retrieve recent logs from the PostgreSQL log file

    This Job identifies the main PostgreSQL log file and then retrieves the most recent logs using `tail`.

    See the [**Project Readme**](/project/automated-diagnostics/home) for recommended tours on how to add remote-nodes and configure connectivity to them using methods such as SSH or Systems Manager (SSM).
  executionEnabled: true
  group: PostgreSQL
  id: 93dae356-ea84-4a6a-b500-984d9f9be657
  loglevel: INFO
  name: Tail PostgreSQL Log File
  nodeFilterEditable: true
  notification:
    onfailure:
      plugin:
        configuration:
          incident_id: ${option.pd_incident_id}
          note: 'Automated diagnostics job did not complete.  For full details, click
              here: ${job.url}#output'
        type: pd-note-incident-notification
  notifyAvgDurationThreshold: null
  nodefilters:
    dispatch:
      excludePrecedence: true
      keepgoing: false
      rankOrder: ascending
      successOnEmptyNodeFilter: false
      threadcount: '1'
    filter: .*
  nodesSelectedByDefault: true
  options:
  - description: |-
      ID of the PagerDuty incident that should receive the diagnostics queried from this automation.
      This field is **_not_** required to invoke this Job.
    label: PagerDuty Incident ID
    name: pd_incident_id
  plugins:
    ExecutionLifecycle: null
  runnerSelector:
    canChange: true
  scheduleEnabled: true
  schedules: []
  sequence:
    commands:
    - description: Retrieve PostgreSQL Log File Name
      exec: ls /var/log/postgresql
      plugins:
        LogFilter:
        - config:
            hideOutput: 'true'
            logData: 'true'
            name: log_file_name
            regex: (.*)
          type: key-value-data-multilines
    - description: Tail Log File
      exec: tail -n 10 /var/log/postgresql/${data.log_file_name*}
      plugins:
        LogFilter:
        - config:
            captureMultipleKeysValues: 'false'
            hideOutput: 'false'
            logData: 'true'
            name: postgres_logs
            regex: (.*)
          type: key-value-data-multilines
    - configuration:
        incident_id: ${option.pd_incident_id}
        note: 'PostgreSQL Logs:\n ${data.postgres_logs*}\n\nClick here for detailed
          diagnostics: ${job.url}#output'
      description: Send Diagnostics to PagerDuty
      errorhandler:
        configuration:
          text: Please provide PagerDuty API token and Incident ID to send diagnostics
            to Incident.
        keepgoingOnSuccess: true
        nodeStep: false
        type: progress-badge
      nodeStep: false
      type: pd-note-step
    keepgoing: false
    strategy: node-first
  tags: postgresql
  uuid: 93dae356-ea84-4a6a-b500-984d9f9be657

